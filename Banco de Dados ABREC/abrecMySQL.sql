-- MySQL Script generated by MySQL Workbench
-- Mon Feb 13 19:36:38 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ABREC
-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `abrec` DEFAULT CHARACTER SET utf8 ;
USE `abrec`;

-- -----------------------------------------------------
-- Table `abrec`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`estado` (
  `id_estado` INT NOT NULL,
  `nome_estado` VARCHAR(100) NOT NULL,
  `sigla` CHAR(2) NOT NULL,
  PRIMARY KEY (`id_estado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`cidade` (
  `id_cidade` INT NOT NULL,
  `nome_cidade` VARCHAR(100) NOT NULL,
  `id_estado` INT NOT NULL,
  PRIMARY KEY (`id_cidade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`endereco` (
  `id_endereco` INT NOT NULL,
  `rua` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(50) NOT NULL,
  `complemento` VARCHAR(50) NOT NULL,
  `cep` CHAR(8) NOT NULL,
  `id_cidade` INT NOT NULL,
  PRIMARY KEY (`id_endereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`pessoa` (
  `id_pessoa` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `cpf` CHAR(11) NOT NULL UNIQUE,
  `rg` CHAR(10) NOT NULL,
  `data_emissao` DATE NOT NULL,
  `orgao_exp` VARCHAR(45) NOT NULL,
  `sexo` ENUM('F', 'M', 'O') NOT NULL,
  `data_cadastro` DATE NOT NULL,
  `status` CHAR(1) NOT NULL,
  `telefone` CHAR(11) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `formacao` VARCHAR(60) NOT NULL,
  `idendereco` INT NOT NULL,
  `id_colaborador_resp` INT NOT NULL,
  PRIMARY KEY (`id_pessoa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`cuidador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cuidador` (
  `id_cuidador` INT NOT NULL,
  `parentesco` VARCHAR(100) NOT NULL,
  `observacao` TEXT NULL,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_cuidador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`clinica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`clinica` (
  `id_clinica` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `telefone` VARCHAR(45) NOT NULL,
  `contato` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `id_endereco` INT NOT NULL,
  PRIMARY KEY (`id_clinica`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`usuario` (
  `id_usuario` INT NOT NULL,
  `nis` CHAR(15) NOT NULL,
  `cns` VARCHAR(45) NOT NULL,
  `observacao` TEXT NULL,
  `situacao_trabalho` VARCHAR(45) NULL,
  `tipo_transporte` VARCHAR(50) NULL,
  `tipo_tratamento` VARCHAR(45) NULL,
  `beneficio` VARCHAR(50) NULL,
  `id_pessoa` INT NOT NULL,
  `id_beneficio` INT NULL,
  `id_cuidador` INT NOT NULL,
  `id_clinica` INT NOT NULL,
  `id_curso` INT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`cargo` (
  `id_cargo` INT NOT NULL,
  `descricao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_cargo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`colaborador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`colaborador` (
  `id_colaborador` INT NOT NULL,
  `matricula` CHAR(8) NOT NULL,
  `salario` DOUBLE NOT NULL,
  `data_admissao` DATE NOT NULL,
  `id_pessoa` INT NOT NULL,
  `id_cargo` INT NOT NULL,
  PRIMARY KEY (`id_colaborador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`consulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`consulta` (
  `id_consulta` INT NOT NULL,
  `data` DATE NOT NULL,
  `observacao` TEXT NOT NULL,
  `id_colaborador` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_consulta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`agendamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`agendamento` (
  `id_agendamento` INT NOT NULL,
  `data` DATE NOT NULL,
  `id_colaborador` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_agendamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`horario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`horario` (
  `id_horario` INT NOT NULL,
  `id_agendamento` INT NOT NULL,
  `hora` TIME NOT NULL,
  PRIMARY KEY (`id_horario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`login` (
  `id_login` INT NOT NULL,
  `usuario` VARCHAR(50) NOT NULL,
  `senha` CHAR(12) NOT NULL,
  `perfil` CHAR(3) NOT NULL,
  `data_login` DATE NULL,
  `status` CHAR(1) NOT NULL,
  `id_colaborador` INT NOT NULL,
  PRIMARY KEY (`id_login`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`palestrante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`palestrante` (
  `id_palestrante` INT NOT NULL,
  `nome` VARCHAR(100) NOT NULL,
  `cpf` CHAR(11) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `telefone` CHAR(11) NOT NULL,
  `formacao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_palestrante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`curso_evento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`curso_evento` (
  `id_curso_evento` INT NOT NULL,
  `nome_curso_evento` VARCHAR(45) NOT NULL,
  `data_inicio` DATE NOT NULL,
  `data_fim` TIME NOT NULL,
  `carga_horaria` INT NOT NULL,
  `id_palestrante` INT NOT NULL,
  PRIMARY KEY (`id_curso_evento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`tipo_medicamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`tipo_medicamento` (
  `id_tipo_medicamento` INT NOT NULL,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_medicamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`medicamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`medicamento` (
  `id_medicamento` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `validade` DATE NOT NULL,
  `lote` CHAR(12) NOT NULL,
  `quantidade` INT NOT NULL,
  `id_tipo_medicamento` INT NOT NULL,
  PRIMARY KEY (`id_medicamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`retirada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`retirada` (
  `idretirada` INT NOT NULL,
  `data` DATE NOT NULL,
  `obs` TEXT NOT NULL,
  `idmedicamento` INT NOT NULL,
  `idcuidador` INT NOT NULL,
  `idusuario` INT NOT NULL,
  PRIMARY KEY (`idretirada`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`tipo_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`tipo_produto` (
  `id_tipo_produto` INT NOT NULL,
  `descricao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_tipo_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`protudo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`protudo` (
  `id_protudo` INT NOT NULL,
  `descricao` VARCHAR(100) NOT NULL,
  `qtdade` INT NOT NULL,
  `lote` VARCHAR(45) NOT NULL,
  `validade` DATE NOT NULL,
  `id_tipo_produto` INT NOT NULL,
  PRIMARY KEY (`id_protudo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`parceiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`parceiro` (
  `id_parceiro` INT NOT NULL,
  `razao_social` VARCHAR(100) NOT NULL,
  `nome_fantasia` VARCHAR(100) NOT NULL,
  `CNPJ` CHAR(14) NOT NULL,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_parceiro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`saida_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`saida_produto` (
  `id_saida_produto` INT NOT NULL,
  `descricao` VARCHAR(150) NOT NULL,
  `data` DATE NOT NULL,
  `hora` TIME NOT NULL,
  `id_colaborador` INT NOT NULL,
  `id_protudo` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_saida_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `abrec`.`participantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `abrec`.`participantes` (
  `id_participante` INT NOT NULL,
  `id_evento` INT NOT NULL,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_participante`))
ENGINE = InnoDB;

describe pessoa;


SET SQL_MODE=@OLD_SQL_MODE;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
